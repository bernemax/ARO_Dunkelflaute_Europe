GAMS 34.2.0  r6925a71 Released Feb  5, 2021 WEX-WEI x86 64bit/MS Windows - 12/09/21 18:09:44 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  Sets
   2   
   3  n /DE,DK,SE,PL,CZ,AT,CH,FR,BE,NL,
   4     NO,UK,IT,ES,PT,BALT,SI/
   5  g /g1*g60/
   6  s /s1*s30/
   7  res/res1*res30/
   8  *NTC/ntc1*ntc100/
   9  t/t1*t8760/
  10  sr/sr1*sr10/
  11  wr/wr1*wr10/
  12   
  13  *H(t,it)
  14   
  15  ****************************thermal************************************************
  16  gas(g)
  17  lig(g)
  18  coal(g)
  19  nuc(g)
  20  oil(g)
  21  waste(g)
  22   
  23  ****************************renewable***********************************************
  24  wind(res)
  25  sun(res)
  26  biomass(res)
  27   
  28  ****************************hydro***************************************************
  29  ror(s)
  30  reservoir(s)
  31  psp(s)
  32   
  33  ****************************mapping*************************************************
  34   
  35  MapG(n,g)
  36  MapS(n,s)
  37  MapRes(n,res)
  38  MapNTC(n,n)
  39  MapSr(n,sr)
  40  MapWr(n,wr)
  41  ;
  42   
  43  alias (n,nn)
  44  ;
  45   
  46  Parameters
  47   
  48  Country_load                    upload table
  49   
  50  Gen_conv                        upload table
  51  Gen_res                         upload table
  52  Gen_hydro                       upload table
  53   
  54  priceup                         upload table
  55  availup                         upload table
  56   
  57  NTC_cap(n,nn)                   upload parameter
  58   
  59   
  60   
  61  Fc_conv(g,t)                    fuel costs conventional powerplants
  62  Fc_res(res,t)                   fuel costs renewable powerplants
  63  CO2_content(g)                  Co2 content
  64  CO2_costs(t)                    CO2 costs
  65  SU_costs(g,t)                   start-up costs conventionals
  66   
  67  su_fact(g)                      start-up factor conventionals
  68  fuel_start(g)                   fuel consumption factor if start-up decision
  69  depri_costs(g)                  deprication costs conventionals
  70   
  71  load(n,t)                       electrical demand in each node in hour t
  72  LS_costs(n)                     loadshedding costs per node
  73  var_costs(g,t)                  variable costs conventional power plants
  74   
  75  cap_conv(g)                     max. generation capacity of each conventional generator
  76  cap_hydro(s)                    max. generation capacity of each psp
  77  cap_res(res)                    max. generation capacity of each RES
  78   
  79  Eff_conv(g)                     efficiency of conventional powerplants
  80  Eff_hydro(s)                    efficiency of hydro powerplants
  81  Eff_res(res)                    efficiency of renewable powerplants
  82   
  83  af_hydro(s,t)                   availability of hydro potential
  84  af_sun(n,sr,t)                  capacity factor of solar energy
  85  af_wind(n,wr,t)                 capacity factor of wind energy
  86   
  87   
  88  **********************************************input Excel table*******************************************************
  89  ;
  90   
 108   
GDXIN   Z:\MitarbeiterOrdner\Bernecker\GitHub Desktop Project Foulder\Quant-Reliability-Energy-Systems\NTC node model\Data_input.gdx
--- LOAD  MapG = 1:MapG
--- LOAD  MapS = 2:MapS
--- LOAD  MapRes = 3:MapRes
--- LOAD  MapSr = 4:MapSr
--- LOAD  MapWr = 5:MapWr
--- LOAD  MapNTC = 6:MapNTC
--- LOAD  Country_load = 7:Country_load
--- LOAD  Gen_conv = 8:Gen_conv
--- LOAD  Gen_res = 9:Gen_res
--- LOAD  Gen_hydro = 10:Gen_Hydro
--- LOAD  priceup = 11:priceup
--- LOAD  availup = 12:availup
--- LOAD  NTC_cap = 13:NTC_cap
 118   
 119  *####################################subset definitions#############################
 120   
 121          gas(g)      =    Gen_conv(g,'tech')  = 1
 122  ;
 123          oil(g)      =    Gen_conv(g,'tech')  = 2
 124  ;
 125          coal(g)     =    Gen_conv(g,'tech')  = 3
 126  ;
 127          lig(g)      =    Gen_conv(g,'tech')  = 4
 128  ;
 129          nuc(g)      =    Gen_conv(g,'tech')  = 5
 130  ;
 131          waste(g)    =    Gen_conv(g,'tech')  = 6
 132  ;
 133   
 134  ***************************************hydro****************************************
 135   
 136          psp(s)      =    Gen_Hydro(s,'tech') = 7
 137  ;
 138          reservoir(s)=    Gen_Hydro(s,'tech') = 8
 139  ;
 140          ror(s)      =    Gen_Hydro(s,'tech') = 9
 141  ;
 142   
 143  ****************************************res*****************************************
 144   
 145          wind(res)   =    Gen_res(res,'tech') = 10
 146  ;
 147          sun(res)    =    Gen_res(res,'tech') = 11
 148  ;
 149          biomass(res)=    Gen_res(res,'tech') = 12
 150  ;
 151   
 152   
 153  *###################################loading parameter###############################
 154   
 155  *****************************************demand*************************************
 156   
 157  load(n,t)           =          Country_load(n,t)
 158  ;
 159  LS_costs(n)         =          3000
 160  ;
 161   
 162  *****************************************prices*************************************
 163   
 164  Fc_conv(gas,t)      =          priceup(t,'gas')
 165  ;
 166  Fc_conv(oil,t)      =          priceup(t,'oil')
 167  ;
 168  Fc_conv(coal,t)     =          priceup(t,'coal')
 169  ;
 170  Fc_conv(lig,t)      =          priceup(t,'lignite')
 171  ;
 172  Fc_conv(nuc,t)      =          priceup(t,'nuclear')
 173  ;
 174  Fc_conv(waste,t)    =          priceup(t,'waste')
 175  ;
 176  Fc_res(biomass,t)   =          priceup(t,'biomass')
 177  ;
 178  CO2_costs(t)        =          priceup(t,'CO2')
 179  ;
 180   
 181  *************************************generators*************************************
 182   
 183  Cap_conv(g)         =          Gen_conv(g,'Gen_cap')
 184  ;
 185  Cap_hydro(s)        =          Gen_Hydro(s,'Gen_cap')
 186  ;
 187  Cap_res(res)        =          Gen_res(res,'Gen_cap')
 188  ;
 189  Eff_conv(g)         =          Gen_conv(g,'eff')
 190  ;
 191  Eff_hydro(s)        =          Gen_hydro(s,'eff')
 192  ;
 193  Eff_res(res)        =          Gen_res(res,'eff')
 194  ;
 195  Co2_content(g)      =          Gen_conv(g,'CO2')
 196  ;
 197  su_fact(g)          =          Gen_conv(g,'su_fact')
 198  ;
 199  depri_costs(g)      =          Gen_conv(g,'depri_costs')
 200  ;
 201  fuel_start(g)       =          Gen_conv(g,'fuel_start')
 202  ;
 203   
 204  ************************************availability************************************
 205   
 206  af_hydro(ror,t)             =          availup(t,'ror')
 207  ;
 208  af_hydro(psp,t)             =          availup(t,'psp')
 209  ;
 210  af_hydro(reservoir,t)       =          availup(t,'reservoir')
 211  ;
 212  af_sun(n,sr,t)$MapSR(n,sr)  =          availup(t,sr)
 213  ;
 214  af_wind(n,wr,t)$MapWR(n,wr) =          availup(t,wr)
 215  ;
 216   
 217  *************************************calculating************************************
 218   
 219  var_costs(g,t)              =          ((FC_conv(g,t)+ co2_costs(t) * co2_content(g)) / Eff_conv(g))
 220  ;
 221  su_costs(g,t)               =          depri_costs(g) + su_fact(g) * fuel_start(g) * FC_conv(g,t) + co2_content(g) * co2_costs(t)
 222  ;
 223   
 224  execute_unload "check.gdx";
STOP Z:\MitarbeiterOrdner\Bernecker\GitHub Desktop Project Foulder\Quant-Reliability-Energy-Systems\NTC node model\Toy_1.gms
GAMS 34.2.0  r6925a71 Released Feb  5, 2021 WEX-WEI x86 64bit/MS Windows - 12/09/21 18:09:44 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  Z:\MitarbeiterOrdner\Bernecker\GitHub Desktop Project Foulder\Quant-Reliability-Energy-Systems\NTC node model\Toy_1.gms
     2      110 CALL           1     110  gdxxrw Data_input.xlsx @TEP.txt
     3      111 GDXIN          1     111  Z:\MitarbeiterOrdner\Bernecker\GitHub Desktop Project Foulder\Quant-Reliability-Energy-Systems\NTC node model\Data_input.gdx
     4      225 STOP           1     225  Z:\MitarbeiterOrdner\Bernecker\GitHub Desktop Project Foulder\Quant-Reliability-Energy-Systems\NTC node model\Toy_1.gms


COMPILATION TIME     =       31.500 SECONDS     11 MB  34.2.0 r6925a71 WEX-WEI
GAMS 34.2.0  r6925a71 Released Feb  5, 2021 WEX-WEI x86 64bit/MS Windows - 12/09/21 18:09:44 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


EXECUTION TIME       =      157.735 SECONDS     75 MB  34.2.0 r6925a71 WEX-WEI


USER: Small MUD - 5 User License                     S201118/0001AN-WIN
      BTU Cottbus-Senftenberg, FG Energiewirtschaft              DC5591
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      Z:\MitarbeiterOrdner\Bernecker\GitHub Desktop Project Foulder\Quant-Reliability-Energy-Systems\NTC node model\Toy_1.gms
Output     Z:\MitarbeiterOrdner\Bernecker\GitHub Desktop Project Foulder\Quant-Reliability-Energy-Systems\NTC node model\Toy_1.lst
